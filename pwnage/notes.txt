## GDB

disass
disass <function_name>
break *<hex_memory_address>
break <function_name>
stepi
nexti


## gcc

gcc -fno-stack-protector -z execstack shellcode.c -o shellcode
break *&code


## Tools

### Compile and link assembly code

nasm -f elf64 file.nasm -o file.o
ld file.o -o file

### Disassemble ELF

objdump -M intel -D Exit.o
objdump -M intel -D file -j .data

### To list function names from ELF

nm -A file | grep -v -e GLIBC -e __

### To get elf sections then specific section contents do

readelf -S ./file
readelf -p 25 ./file

### radare

/R pop rdi

list functions - afl
move to functions - s <fname>
disass function - pdf or pdb
visual mode - V then p
rewrite file - A (use mostly when on visual mode)


find strings - rabin2 -z <file>


## Resources

shell-storm.org


## Unix System calls (video 06)
    
    Registers

        RAX - syscall number
        RDI - 1st arg
        RSI - 2nd arg
        RDX - 3rd arg
        R10 - 4th arg
        R8 - 5th
        R9 - 6th

    man 2 write

        ssize_t write(int fd, const void *buf, size_t count);

    http://blog.tinola.com/?e=5
    https://filippo.io/linux-syscall-table/


    printf "#include <sys/syscall.h>\nSYS_read" | gcc -E -
    cat /usr/include/x86_64-linux-gnu/asm/unistd_64.h

## Get binary shellcode in right format

for i in $(objdump -d binary -M intel |grep "^ " |cut -f2); do echo -n '\x'$i; done;echo

## String to reversed hex

"/bin//sh"[::-1].encode('hex')
68732f2f6e69622f


## msf encoders

echo -ne "shellcode" | msfvenom -f c -e x64/xor -a x64 --platform linux 


## variable sizes

byte
word - 2 bytes
double word - 4 bytes
quad word - 8 bytes
